<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Payment_api extends API_Controller {	public function __construct()	{		parent::__construct();	}	/*=============================================			USING		=================================		=>				url : http;//ecommerce.babastudio.net/wishlist_api			POST variables			=====================			$_POST['email'] 			= 'kelly@yahoo.com';			$_POST['password'] 			= 'a';			$_POST['request_method'] 	= 'index';			OR			$_POST['token'] 			= 'sfsdfuywejsdfu';			$_POST['request_method'] 	= 'index';		1.	DATA FOR ALL PAGE ( FROM api_controller )		2.	CEK COUPON 		3.	RESPONSE JSON 	=============================================*/		public function index()	{		/*=============================================			1.	DATA FOR ALL PAGE ( FROM api_controller )		=============================================*/		$data = $this->data_for_all_pages();		/*=============================================			2.	PAYMENT PROCESS		=============================================*/				$bank				= $this->security->xss_clean($this->input->post('bank'));		$name				= $this->security->xss_clean($this->input->post('name'));		$amount				= $this->security->xss_clean($this->input->post('transfer_amount'));		$order_id			= $this->security->xss_clean($this->input->post('order_id'));;				if($bank == "" or $name = "" or $amount == "" or $order_id == "")		{			$message = "Parameter is Empty";		}		else		{			$insert_data		= array(																		'order_id'		=> $order_id,																		'bank_id'		=> $bank,																		'nama_pengirim'	=> $name,																		'payment_amount'=> $amount,																		'payment_date'	=> date("Y-m-d H:i:s"),																		'customer_id'	=> $this->session->userdata('id_customer')			);						$this->model_utama->insert_data('payment_master',$insert_data);						$order_master['order_confirm_date']	= date("Y-m-d H:i:s");			$order_master['order_status']		= "confirm";						$this->model_utama->update_data($order_id,'order_id','order_master',$order_master);					$message = "Data Saved";		}				/*=============================================			3.	RESPONSE JSON 		=============================================*/		$status 	= self::SUCCESS;		$message 	= $message;		$token 		= $this->_token;		$this->jsonout(	$status,						 $message, 						 $data,						 $token						 );			/* $response	= $this->output						->set_content_type('application/json')						->set_output(json_encode(array(											'data' 		=> $data,											'message'	=> $coupon_status											)));								return $response; */				exit ;	}		public function uploadreceipt()	{		/*=============================================			1.	DATA FOR ALL PAGE ( FROM api_controller )		=============================================*/		$data = $this->data_for_all_pages();		/*=============================================			2.	PAYMENT PROCESS		=============================================*/				$order_id			= $this->security->xss_clean($this->input->post('order_id'));				$upload_path		= 	'./uploads/bukti_pembayaran/';		$allowed_types		=	'gif|jpg|png|jpeg';		$file_name			= 	'transfer_receipt'; 		$file_dokumen 		= 	$this->upload_files($upload_path,$allowed_types,$file_name);					if($order_id == "" or $file_dokumen == '')		{			$message = "Parameter is Empty";		}		else		{				$payment_master['bukti_transfer']	= $file_dokumen;								$this->model_utama->update_data($order_id,'order_id','payment_master',$payment_master);					$message = "Data Saved";		}				/*=============================================			3.	RESPONSE JSON 		=============================================*/		$status 	= self::SUCCESS;		$message 	= $message;		$token 		= $this->_token;		$this->jsonout(	$status,						 $message, 						 $data,						 $token						 );			/* $response	= $this->output						->set_content_type('application/json')						->set_output(json_encode(array(											'data' 		=> $data,											'message'	=> $coupon_status											)));								return $response; */				exit ;	}		function upload_files($upload_path,$allowed_types,$file_name,$remove_space=''){			$config['upload_path'] 		= $upload_path;		$config['allowed_types'] 	= $allowed_types;		if( $remove_space != '' ){			$config['remove_spaces'] 	= $remove_space;			}		$this->load->library('upload', $config);				if( !is_dir($upload_path) ){			mkdir($upload_path, 0777, true);					}				if ( !$this->upload->do_upload($file_name) ){			$file_dokumen	= '';		}else{			$dokumen		= $this->upload->data();			$file_dokumen	= $dokumen['file_name'];		}		if( 	$file_dokumen != ''			&&	( stripos($file_dokumen,'jpg') > 0	||	stripos($file_dokumen,'png') > 0 )		){			$config_array = array(									'upload_path'	=>	$upload_path,									'image_name'	=>	$file_dokumen									);			$this->image_manipulation($config_array);		}		return $file_dokumen;	}		function image_manipulation($config_array){		$this->load->library('image_lib'); 		// CONFIGURE IMAGE LIBRARY		$config['image_library']    = 'gd2';		$config['source_image']     = $config_array['upload_path'].'/'.$config_array['image_name'];		$config['new_image']        = $config_array['upload_path'].'/thumb_'.$config_array['image_name'];		$config['create_thumb'] 	= TRUE;		$config['maintain_ratio']   = false;		$config['width']            = 375;		$config['height']           = 375;		$config['quality'] 			= 60;		$config['thumb_marker'] 	= '';		$this->image_lib->initialize($config);		$this->image_lib->resize();		$this->image_lib->clear();	}}